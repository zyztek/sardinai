/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/realtime/route";
exports.ids = ["app/api/realtime/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Frealtime%2Froute&page=%2Fapi%2Frealtime%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frealtime%2Froute.ts&appDir=%2Fworkspace%2Fsardinai%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspace%2Fsardinai&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Frealtime%2Froute&page=%2Fapi%2Frealtime%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frealtime%2Froute.ts&appDir=%2Fworkspace%2Fsardinai%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspace%2Fsardinai&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _workspace_sardinai_src_app_api_realtime_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/realtime/route.ts */ \"(rsc)/./src/app/api/realtime/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/realtime/route\",\n        pathname: \"/api/realtime\",\n        filename: \"route\",\n        bundlePath: \"app/api/realtime/route\"\n    },\n    resolvedPagePath: \"/workspace/sardinai/src/app/api/realtime/route.ts\",\n    nextConfigOutput,\n    userland: _workspace_sardinai_src_app_api_realtime_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZyZWFsdGltZSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcmVhbHRpbWUlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZyZWFsdGltZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZ3b3Jrc3BhY2UlMkZzYXJkaW5haSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGd29ya3NwYWNlJTJGc2FyZGluYWkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ0M7QUFDOUU7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi93b3Jrc3BhY2Uvc2FyZGluYWkvc3JjL2FwcC9hcGkvcmVhbHRpbWUvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3JlYWx0aW1lL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcmVhbHRpbWVcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3JlYWx0aW1lL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL3dvcmtzcGFjZS9zYXJkaW5haS9zcmMvYXBwL2FwaS9yZWFsdGltZS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Frealtime%2Froute&page=%2Fapi%2Frealtime%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frealtime%2Froute.ts&appDir=%2Fworkspace%2Fsardinai%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspace%2Fsardinai&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/realtime/route.ts":
/*!***************************************!*\
  !*** ./src/app/api/realtime/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n// Store connected clients (will be managed by Socket.IO server)\nconst clients = new Set();\n// Data generators for different types of real-time data\nclass DataGenerators {\n    startGenerating() {\n        this.startOceanographicData();\n        this.startPredictionData();\n        this.startVesselData();\n        this.startSystemAlerts();\n    }\n    stopGenerating() {\n        this.intervals.forEach((interval)=>clearInterval(interval));\n        this.intervals.clear();\n    }\n    startOceanographicData() {\n        const interval = setInterval(()=>{\n            const data = {\n                type: 'oceanographic',\n                timestamp: new Date().toISOString(),\n                data: {\n                    sea_surface_temp: 16 + Math.random() * 8,\n                    chlorophyll: 0.3 + Math.random() * 1.2,\n                    salinity: 33 + Math.random() * 2,\n                    current_speed: Math.random() * 2,\n                    current_direction: Math.random() * 360,\n                    wave_height: Math.random() * 3,\n                    wave_period: 8 + Math.random() * 4,\n                    wind_speed: Math.random() * 15,\n                    wind_direction: Math.random() * 360\n                },\n                location: {\n                    latitude: 31.8667 + (Math.random() - 0.5) * 0.5,\n                    longitude: -116.6167 + (Math.random() - 0.5) * 0.5\n                }\n            };\n            this.broadcast(data);\n        }, 5000); // Every 5 seconds\n        this.intervals.set('oceanographic', interval);\n    }\n    startPredictionData() {\n        const interval = setInterval(()=>{\n            const data = {\n                type: 'prediction',\n                timestamp: new Date().toISOString(),\n                data: {\n                    sardine_probability: Math.random(),\n                    confidence: 0.6 + Math.random() * 0.4,\n                    optimal_zones: Array.from({\n                        length: Math.floor(Math.random() * 3) + 1\n                    }, (_, i)=>({\n                            latitude: 31.8667 + (Math.random() - 0.5) * 1,\n                            longitude: -116.6167 + (Math.random() - 0.5) * 1,\n                            radius: 5 + Math.random() * 10,\n                            probability: 0.5 + Math.random() * 0.5\n                        })),\n                    migration_pattern: {\n                        direction: [\n                            'north',\n                            'south',\n                            'east',\n                            'west',\n                            'northeast',\n                            'northwest',\n                            'southeast',\n                            'southwest'\n                        ][Math.floor(Math.random() * 8)],\n                        speed: 0.5 + Math.random() * 2,\n                        confidence: 0.7 + Math.random() * 0.3\n                    }\n                },\n                location: {\n                    latitude: 31.8667 + (Math.random() - 0.5) * 0.5,\n                    longitude: -116.6167 + (Math.random() - 0.5) * 0.5\n                }\n            };\n            this.broadcast(data);\n        }, 10000); // Every 10 seconds\n        this.intervals.set('prediction', interval);\n    }\n    startVesselData() {\n        const interval = setInterval(()=>{\n            const vesselTypes = [\n                'fishing',\n                'cargo',\n                'passenger',\n                'military'\n            ];\n            const statuses = [\n                'active',\n                'inactive',\n                'anchored'\n            ];\n            const data = {\n                type: 'vessel',\n                timestamp: new Date().toISOString(),\n                data: {\n                    vessels: Array.from({\n                        length: Math.floor(Math.random() * 10) + 5\n                    }, (_, i)=>({\n                            id: `vessel_${Date.now()}_${i}`,\n                            name: `Vessel ${i + 1}`,\n                            type: vesselTypes[Math.floor(Math.random() * vesselTypes.length)],\n                            latitude: 31.8667 + (Math.random() - 0.5) * 2,\n                            longitude: -116.6167 + (Math.random() - 0.5) * 2,\n                            speed: Math.random() * 20,\n                            heading: Math.random() * 360,\n                            status: statuses[Math.floor(Math.random() * statuses.length)]\n                        }))\n                }\n            };\n            this.broadcast(data);\n        }, 15000); // Every 15 seconds\n        this.intervals.set('vessel', interval);\n    }\n    startSystemAlerts() {\n        const interval = setInterval(()=>{\n            const alertTypes = [\n                'high_probability',\n                'breeding_season',\n                'weather_warning',\n                'sustainability_alert'\n            ];\n            const severities = [\n                'low',\n                'medium',\n                'high',\n                'critical'\n            ];\n            // Only send alerts occasionally\n            if (Math.random() > 0.7) {\n                const data = {\n                    type: 'alert',\n                    timestamp: new Date().toISOString(),\n                    data: {\n                        type: alertTypes[Math.floor(Math.random() * alertTypes.length)],\n                        severity: severities[Math.floor(Math.random() * severities.length)],\n                        message: this.generateAlertMessage(),\n                        location: Math.random() > 0.3 ? {\n                            latitude: 31.8667 + (Math.random() - 0.5) * 0.5,\n                            longitude: -116.6167 + (Math.random() - 0.5) * 0.5\n                        } : undefined,\n                        action_required: Math.random() > 0.5,\n                        expires_at: Math.random() > 0.5 ? new Date(Date.now() + Math.random() * 3600000).toISOString() : undefined\n                    }\n                };\n                this.broadcast(data);\n            }\n        }, 30000); // Every 30 seconds\n        this.intervals.set('alerts', interval);\n    }\n    generateAlertMessage() {\n        const messages = [\n            'High probability of sardine detection in the area',\n            'Breeding season alert - fishing restrictions may apply',\n            'Weather warning: Strong winds expected in the next 24 hours',\n            'Sustainability alert: Catch limits approaching in this zone',\n            'Temperature anomaly detected - unusual conditions',\n            'Vessel traffic congestion reported in the area',\n            'Optimal fishing conditions identified',\n            'Migration pattern change detected'\n        ];\n        return messages[Math.floor(Math.random() * messages.length)];\n    }\n    broadcast(data) {\n        // This will be handled by Socket.IO server\n        // For now, just log the data\n        console.log('Broadcasting data:', data.type, 'at', data.timestamp);\n    }\n    isRunning() {\n        return this.intervals.size > 0;\n    }\n    constructor(){\n        this.intervals = new Map();\n    }\n}\nconst dataGenerators = new DataGenerators();\n// Initialize data generators (Socket.IO server handles connections)\nfunction initializeDataGenerators() {\n    if (!dataGenerators.isRunning()) {\n        dataGenerators.startGenerating();\n    }\n}\nasync function GET(request) {\n    // Initialize data generators if not already running\n    initializeDataGenerators();\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        message: 'WebSocket server initialized',\n        connectedClients: clients.size,\n        status: 'running'\n    });\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { type, data } = body;\n        // Handle different types of incoming data\n        switch(type){\n            case 'custom_alert':\n                // Broadcast custom alert to all clients\n                dataGenerators.broadcast({\n                    type: 'alert',\n                    timestamp: new Date().toISOString(),\n                    data: {\n                        type: data.alertType || 'custom',\n                        severity: data.severity || 'medium',\n                        message: data.message || 'Custom alert',\n                        location: data.location,\n                        action_required: data.actionRequired || false\n                    }\n                });\n                break;\n            case 'update_prediction':\n                // Broadcast prediction update\n                dataGenerators.broadcast({\n                    type: 'prediction',\n                    timestamp: new Date().toISOString(),\n                    data: data.predictionData\n                });\n                break;\n            case 'system_message':\n                // Broadcast system message\n                dataGenerators.broadcast({\n                    type: 'system',\n                    timestamp: new Date().toISOString(),\n                    data: data.messageData\n                });\n                break;\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Unknown message type'\n                }, {\n                    status: 400\n                });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Data broadcasted successfully'\n        });\n    } catch (error) {\n        console.error('Error handling POST request:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n// Cleanup on module unload\nprocess.on('SIGTERM', ()=>{\n    dataGenerators.stopGenerating();\n});\nprocess.on('SIGINT', ()=>{\n    dataGenerators.stopGenerating();\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/realtime/route.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Frealtime%2Froute&page=%2Fapi%2Frealtime%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frealtime%2Froute.ts&appDir=%2Fworkspace%2Fsardinai%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspace%2Fsardinai&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();