(()=>{var t={};t.id=305,t.ids=[305],t.modules={846:t=>{"use strict";t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:t=>{"use strict";t.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:t=>{"use strict";t.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4271:(t,e,a)=>{"use strict";a.r(e),a.d(e,{patchFetch:()=>y,routeModule:()=>m,serverHooks:()=>M,workAsyncStorage:()=>u,workUnitAsyncStorage:()=>g});var r={};a.r(r),a.d(r,{GET:()=>c,POST:()=>p});var n=a(6559),s=a(8088),i=a(7719),o=a(2190);let d=new Set;class l{startGenerating(){this.startOceanographicData(),this.startPredictionData(),this.startVesselData(),this.startSystemAlerts()}stopGenerating(){this.intervals.forEach(t=>clearInterval(t)),this.intervals.clear()}startOceanographicData(){let t=setInterval(()=>{let t={type:"oceanographic",timestamp:new Date().toISOString(),data:{sea_surface_temp:16+8*Math.random(),chlorophyll:.3+1.2*Math.random(),salinity:33+2*Math.random(),current_speed:2*Math.random(),current_direction:360*Math.random(),wave_height:3*Math.random(),wave_period:8+4*Math.random(),wind_speed:15*Math.random(),wind_direction:360*Math.random()},location:{latitude:31.8667+(Math.random()-.5)*.5,longitude:-116.6167+(Math.random()-.5)*.5}};this.broadcast(t)},5e3);this.intervals.set("oceanographic",t)}startPredictionData(){let t=setInterval(()=>{let t={type:"prediction",timestamp:new Date().toISOString(),data:{sardine_probability:Math.random(),confidence:.6+.4*Math.random(),optimal_zones:Array.from({length:Math.floor(3*Math.random())+1},(t,e)=>({latitude:31.8667+(Math.random()-.5)*1,longitude:-116.6167+(Math.random()-.5)*1,radius:5+10*Math.random(),probability:.5+.5*Math.random()})),migration_pattern:{direction:["north","south","east","west","northeast","northwest","southeast","southwest"][Math.floor(8*Math.random())],speed:.5+2*Math.random(),confidence:.7+.3*Math.random()}},location:{latitude:31.8667+(Math.random()-.5)*.5,longitude:-116.6167+(Math.random()-.5)*.5}};this.broadcast(t)},1e4);this.intervals.set("prediction",t)}startVesselData(){let t=setInterval(()=>{let t=["fishing","cargo","passenger","military"],e=["active","inactive","anchored"],a={type:"vessel",timestamp:new Date().toISOString(),data:{vessels:Array.from({length:Math.floor(10*Math.random())+5},(a,r)=>({id:`vessel_${Date.now()}_${r}`,name:`Vessel ${r+1}`,type:t[Math.floor(Math.random()*t.length)],latitude:31.8667+(Math.random()-.5)*2,longitude:-116.6167+(Math.random()-.5)*2,speed:20*Math.random(),heading:360*Math.random(),status:e[Math.floor(Math.random()*e.length)]}))}};this.broadcast(a)},15e3);this.intervals.set("vessel",t)}startSystemAlerts(){let t=setInterval(()=>{let t=["high_probability","breeding_season","weather_warning","sustainability_alert"],e=["low","medium","high","critical"];if(Math.random()>.7){let a={type:"alert",timestamp:new Date().toISOString(),data:{type:t[Math.floor(Math.random()*t.length)],severity:e[Math.floor(Math.random()*e.length)],message:this.generateAlertMessage(),location:Math.random()>.3?{latitude:31.8667+(Math.random()-.5)*.5,longitude:-116.6167+(Math.random()-.5)*.5}:void 0,action_required:Math.random()>.5,expires_at:Math.random()>.5?new Date(Date.now()+36e5*Math.random()).toISOString():void 0}};this.broadcast(a)}},3e4);this.intervals.set("alerts",t)}generateAlertMessage(){let t=["High probability of sardine detection in the area","Breeding season alert - fishing restrictions may apply","Weather warning: Strong winds expected in the next 24 hours","Sustainability alert: Catch limits approaching in this zone","Temperature anomaly detected - unusual conditions","Vessel traffic congestion reported in the area","Optimal fishing conditions identified","Migration pattern change detected"];return t[Math.floor(Math.random()*t.length)]}broadcast(t){console.log("Broadcasting data:",t.type,"at",t.timestamp)}isRunning(){return this.intervals.size>0}constructor(){this.intervals=new Map}}let h=new l;async function c(t){return h.isRunning()||h.startGenerating(),o.NextResponse.json({message:"WebSocket server initialized",connectedClients:d.size,status:"running"})}async function p(t){try{let{type:e,data:a}=await t.json();switch(e){case"custom_alert":h.broadcast({type:"alert",timestamp:new Date().toISOString(),data:{type:a.alertType||"custom",severity:a.severity||"medium",message:a.message||"Custom alert",location:a.location,action_required:a.actionRequired||!1}});break;case"update_prediction":h.broadcast({type:"prediction",timestamp:new Date().toISOString(),data:a.predictionData});break;case"system_message":h.broadcast({type:"system",timestamp:new Date().toISOString(),data:a.messageData});break;default:return o.NextResponse.json({error:"Unknown message type"},{status:400})}return o.NextResponse.json({success:!0,message:"Data broadcasted successfully"})}catch(t){return console.error("Error handling POST request:",t),o.NextResponse.json({error:"Internal server error"},{status:500})}}process.on("SIGTERM",()=>{h.stopGenerating()}),process.on("SIGINT",()=>{h.stopGenerating()});let m=new n.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/realtime/route",pathname:"/api/realtime",filename:"route",bundlePath:"app/api/realtime/route"},resolvedPagePath:"/workspace/sardinai/src/app/api/realtime/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:u,workUnitAsyncStorage:g,serverHooks:M}=m;function y(){return(0,i.patchFetch)({workAsyncStorage:u,workUnitAsyncStorage:g})}},4870:t=>{"use strict";t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9294:t=>{"use strict";t.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var e=require("../../../webpack-runtime.js");e.C(t);var a=t=>e(e.s=t),r=e.X(0,[447,580],()=>a(4271));module.exports=r})();